通过获取代理目标的接口，使用proxyTarget方法产生一个代理类，该代理类实现了代理目标的所有接口
因此需要交给代理类代理执行的方法都应卸载写在接口中，这些接口也应该交由代理目标来实现

此时通过spring获取到代理工厂，并生成了动态代理类后，所要执行的方法是通过反射的invoke方法来执行
比如：获取book对象的代理类$Proxy0,代理执行book实现接口的bookInfo方法时
$Proxy0类则会通过方法名基于反射查找代理类自身中是否存在该方法，如果存在该方法则会通过反射
invoke执行，此时调用的invoke是代理工厂中的invoke方法，由代理工厂中的invoke方法再去回调动态代理类的invoke方法
动态代理类的invoke方法则再回调代理目标的真正的invoke方法